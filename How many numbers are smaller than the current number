class Solution {
public:
    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {
        int n=nums.size();
        
        unordered_map<int,int> mp,mp1;
        
        set<int> s;
        for(auto x: nums){
            mp[x]++;
            s.insert(x);
        }
        int temp=0;
        for(auto x=s.begin();x!=s.end();x++){
            int val= *x;
           mp1[val]=temp;
            temp+= mp[val];
        }
        vector<int> ans(n);
        for(int i=0;i<n;i++){
            ans[i]= mp1[nums[i]];
        }
        return ans;
        
    }
};

Better one:
vector<int> count(101);
        vector<int> ans(nums.size());
        
        for(int i=0;i<nums.size();i++)
            count[nums[i]]++;
        
        for(int i=1;i<=100;i++)
        {
            count[i]+=count[i-1];
        }
        
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==0)
                ans[i]=0;
            else
                ans[i]=count[nums[i]-1];
        }
        return ans;
