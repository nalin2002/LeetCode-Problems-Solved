class Solution {
public:
    int gcd_two(int x,int y){
        if(x==0)
            return y;
        return gcd_two(y%x,x);
    }
    int gcd(vector<int> v){
        int n=v.size();
        int ans=v[0];
        for(int i=1;i<n;i++){
            ans= gcd_two(v[i],v[i-1]);
            if(ans==1){
                return 1;
            }
        }
        return ans;
    }
    bool hasGroupsSizeX(vector<int>& deck) {
        int n=deck.size();
        
        if(n==1)
            return false;
        unordered_map<int,int> mp;
        for(auto x: deck){
            mp[x]++;
        }
        deck.clear();
        bool flag=true;
        for(auto it=mp.begin();it!=mp.end();it++){
            if(it->second==1){
                flag=false;
                break;
            }
           
        }
        if(!flag)
            return false;
        for(auto it=mp.begin();it!=mp.end();it++){
            deck.push_back(it->second);
        }
         int mini=gcd(deck);
        if(mini==1)
            return false;
        else
            return true;
    }
};
